[{"D:\\Wiktor\\manager-spacery\\spacery-pro-manager\\src\\index.js":"1","D:\\Wiktor\\manager-spacery\\spacery-pro-manager\\src\\reportWebVitals.js":"2","D:\\Wiktor\\manager-spacery\\spacery-pro-manager\\src\\App.js":"3","D:\\Wiktor\\manager-spacery\\spacery-pro-manager\\src\\pages\\Valuation.jsx":"4","D:\\Wiktor\\manager-spacery\\spacery-pro-manager\\src\\pages\\Presets.jsx":"5","D:\\Wiktor\\manager-spacery\\spacery-pro-manager\\src\\pages\\VirtualTours.jsx":"6","D:\\Wiktor\\manager-spacery\\spacery-pro-manager\\src\\pages\\PanoheadUsage.jsx":"7","D:\\Wiktor\\manager-spacery\\spacery-pro-manager\\src\\pages\\CameraInstallation.jsx":"8","D:\\Wiktor\\manager-spacery\\spacery-pro-manager\\src\\instructions\\panoheadHandling\\Step01.jsx":"9"},{"size":955,"mtime":1618048621638,"results":"10","hashOfConfig":"11"},{"size":375,"mtime":1618048621640,"results":"12","hashOfConfig":"11"},{"size":10205,"mtime":1618048621634,"results":"13","hashOfConfig":"11"},{"size":1549,"mtime":1618048621640,"results":"14","hashOfConfig":"11"},{"size":6682,"mtime":1618048621639,"results":"15","hashOfConfig":"11"},{"size":105,"mtime":1618048621640,"results":"16","hashOfConfig":"11"},{"size":4617,"mtime":1618048621639,"results":"17","hashOfConfig":"11"},{"size":6896,"mtime":1618048621639,"results":"18","hashOfConfig":"11"},{"size":104,"mtime":1618048621638,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"136wi5u",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Wiktor\\manager-spacery\\spacery-pro-manager\\src\\index.js",[],"D:\\Wiktor\\manager-spacery\\spacery-pro-manager\\src\\reportWebVitals.js",[],"D:\\Wiktor\\manager-spacery\\spacery-pro-manager\\src\\App.js",["42","43","44","45","46","47","48","49","50","51","52"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport {ExpandLess, ExpandMore, StarBorder} from \"@material-ui/icons\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\nimport SettingsInputAntennaIcon from '@material-ui/icons/SettingsInputAntenna';\r\nimport ThreeSixtyIcon from '@material-ui/icons/ThreeSixty';\r\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\r\nimport TapAndPlayIcon from '@material-ui/icons/TapAndPlay';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\nimport SubdirectoryArrowRightIcon from '@material-ui/icons/SubdirectoryArrowRight';\r\nimport Step01 from \"./instructions/panoheadHandling/Step01\";\r\nimport {\r\n    Switch,\r\n    Route,\r\n    Link, NavLink\r\n} from \"react-router-dom\";\r\nimport {Presets} from \"./pages/Presets\";\r\nimport {VirtualTours} from \"./pages/VirtualTours\";\r\nimport {Valuation} from \"./pages/Valuation\";\r\nimport {CameraInstallation} from \"./pages/CameraInstallation\";\r\nimport {PanoheadUsage} from \"./pages/PanoheadUsage\";\r\nconst drawerWidth = 300;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n    nested: {\r\n        paddingLeft: theme.spacing(4),\r\n    },\r\n}));\r\n\r\nconst activeStyle={\r\n    color: 'black',\r\n    fontWeight:'bold'\r\n}\r\n\r\nconst  App=()=> {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const [open1, setOpen1] = React.useState(false);\r\n    const [open2, setOpen2] = React.useState(false);\r\n\r\n    const handleClick = () => {\r\n        setOpen1(!open1);\r\n    };\r\n\r\n    const handleClick2 = () => {\r\n        setOpen2(!open2);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, open && classes.hide)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        Spacery-wirtualne.pro\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List\r\n                    component=\"nav\"\r\n                >\r\n                    <NavLink\r\n                        to=\"/virtual-tours\"\r\n                        activeStyle={activeStyle}\r\n                    >\r\n                    <ListItem button >\r\n                        <ListItemIcon>\r\n                            <ThreeSixtyIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Spacery\" />\r\n                    </ListItem></NavLink>\r\n                    <NavLink\r\n                        to=\"/valuation\"\r\n                        activeStyle={activeStyle}\r\n                    >\r\n                    <ListItem button >\r\n                        <ListItemIcon>\r\n                            <AttachMoneyIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Wycena\" />\r\n                    </ListItem></NavLink>\r\n\r\n                    <ListItem button onClick={handleClick}>\r\n                        <ListItemIcon>\r\n                            <MenuBookIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Instrukcje\" />\r\n                        {open1 ? <ExpandLess /> : <ExpandMore />}\r\n                    </ListItem>\r\n                    <Collapse in={open1} timeout=\"auto\" unmountOnExit>\r\n                        <List component=\"div\" disablePadding>\r\n\r\n\r\n\r\n                            <NavLink\r\n                                to=\"/panohead-usage\"\r\n                                activeStyle={activeStyle}\r\n\r\n                            >\r\n                                <ListItem button className={classes.nested}>\r\n                                    <ListItemIcon>\r\n                                        <TapAndPlayIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary=\"Obsługa głowicy\" />\r\n                                </ListItem>\r\n                            </NavLink>\r\n\r\n\r\n                            <NavLink\r\n                                to=\"/camera-installation\"\r\n                                activeStyle={activeStyle}\r\n\r\n                            >\r\n                            <ListItem button className={classes.nested}>\r\n                                <ListItemIcon>\r\n                                    <CameraAltIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Montaż aparatów\" />\r\n                            </ListItem>\r\n                            </NavLink>\r\n                        </List>\r\n                    </Collapse>\r\n                    <NavLink\r\n                    to=\"/presets\"\r\n                    activeStyle={activeStyle}\r\n\r\n                    >\r\n                    <ListItem button >\r\n                        <ListItemIcon>\r\n                            <AttachMoneyIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Generator prestów\" />\r\n                    </ListItem></NavLink>\r\n                </List>\r\n\r\n            </Drawer>\r\n            <main\r\n                className={clsx(classes.content, {\r\n                    [classes.contentShift]: open,\r\n                })}\r\n            >\r\n                <div className={classes.drawerHeader} />\r\n                <Switch>\r\n                    <Route path=\"/presets\">\r\n                        <Presets />\r\n                    </Route>\r\n                    <Route path=\"/virtual-tours\">\r\n                        <VirtualTours />\r\n                    </Route>\r\n                    <Route path=\"/valuation\">\r\n                        <Valuation />\r\n                    </Route>\r\n                    <Route path=\"/camera-installation\">\r\n                        <CameraInstallation />\r\n                    </Route>\r\n                    <Route path=\"/panohead-usage\">\r\n                        <PanoheadUsage />\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        home\r\n                    </Route>\r\n                </Switch>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\nexport default App;\r\n","D:\\Wiktor\\manager-spacery\\spacery-pro-manager\\src\\pages\\Valuation.jsx",["53"],"import React from 'react'\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {PlusOne, ExposureNeg1} from \"@material-ui/icons\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\n\r\nexport const Valuation=()=>{\r\n    // eslint-disable-next-line no-undef\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(30);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (<div>\r\n\r\n        <Typography id=\"continuous-slider\" gutterBottom>\r\n            Liczba punktów 360°\r\n        </Typography>\r\n\r\n        <div className={classes.sliderContainer}>\r\n                <IconButton onClick={()=>setValue(value-1)} disabled={value===1}  className={classes.iconButton}>\r\n                    <ExposureNeg1  />\r\n                </IconButton>\r\n\r\n                <Slider value={value} onChange={handleChange} step={1}\r\n\r\n                        min={1}\r\n                        max={150}         defaultValue={20}        valueLabelDisplay=\"auto\"\r\n\r\n                />\r\n                <IconButton onClick={()=>setValue(value+1)} disabled={value===150} className={classes.iconButton}>\r\n                    <PlusOne  />\r\n                </IconButton>\r\n        </div>\r\n\r\n    </div>)\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    sliderContainer:{\r\n        display:'flex', alignItems:'center'\r\n    },\r\n    iconButton:{margin:'1%'}\r\n});\r\n","D:\\Wiktor\\manager-spacery\\spacery-pro-manager\\src\\pages\\Presets.jsx",["54","55"],"import React, {useEffect} from 'react'\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {ExposureNeg1, PlusOne} from \"@material-ui/icons\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\n\r\nexport const Presets=()=>{\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        focalLength: '',\r\n        sensorMultiply: '',\r\n        cameraOrientation:'portrait'\r\n    });\r\n\r\n    const [frameAngle, setFrameAngle] = React.useState({x:0,y:0});\r\n    const [rows, setRows] = React.useState(0);\r\n    const [columns, setColumns] = React.useState(0);\r\n    const sensorMultiplyTemplates = [\r\n        { title: 'FullFrame (x 1.00)', value: 1 },\r\n        { title: 'Nikon APS-C (x 1.53)', value: 1.53 },\r\n        { title: 'Canon APS-C (x 1.62)', value: 1.62 },\r\n        { title: 'Canon APS-H (x 1.29)', value: 1.29 },\r\n\r\n]\r\n    useEffect(()=>{\r\n        if(!!values.focalLength&&!!values.sensorMultiply){\r\n            console.log('changeVakues')\r\n            calcAngleOfView(values.focalLength,values.sensorMultiply)\r\n\r\n        }\r\n    },[values])\r\n\r\n    const calcAngleOfView=(_ogniskowa, _matryca)=> {\r\n        const ogniskowa=Number(_ogniskowa)\r\n        const matryca=Number(_matryca)\r\n        let pi = Math.PI;\r\n        let angleRadH = 2 * Math.atan((36 / matryca) / (2 * ogniskowa));\r\n        let angleDegH = (angleRadH * (180 / pi)).toFixed(2);\r\n\r\n        let angleRadV = 2 * Math.atan((24 / matryca) / (2 * ogniskowa));\r\n        let angleDegV = (angleRadV * (180 / pi)).toFixed(2);\r\n        setFrameAngle({x:angleDegH,y:angleDegV})\r\n        setColumns(calcMinNumbOfPhotos(360/(values.cameraOrientation!=='portrait'?angleDegH:angleDegV)))\r\n        setRows(calcMinNumbOfPhotos(180/(values.cameraOrientation==='portrait'?angleDegH:angleDegV)))\r\n    }\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n\r\n    const generateFrame=()=>{\r\n        return <div style={{width: values.cameraOrientation==='portrait'?266:400, height: values.cameraOrientation==='portrait'?400:266, backgroundColor: 'red'}}>\r\n            <p>{frameAngle.x}°</p>\r\n            <p>{frameAngle.y}°</p>\r\n        </div>\r\n    }\r\n\r\n    const calcMinNumbOfPhotos=(value)=>{\r\n        console.log(value)\r\n        return Math.ceil(value)\r\n    }\r\n\r\n    return (<>\r\n        <div style={{display:'flex'}}>\r\n            <FormControl  className={classes.input} variant=\"outlined\">\r\n                <InputLabel htmlFor=\"outlined-adornment-amount\">Ogniskowa obiektywu</InputLabel>\r\n                <OutlinedInput\r\n                    id=\"outlined-adornment-amount\"\r\n                    value={values.amount}\r\n                    onChange={handleChange('focalLength')}\r\n                    endAdornment={<InputAdornment position=\"end\">mm</InputAdornment>}\r\n                    labelWidth={60}\r\n                />\r\n            </FormControl>\r\n            <Autocomplete\r\n                className={classes.input}\r\n                id=\"sensor-multiply\"\r\n                freeSolo\r\n                onChange={(event, value) => console.log({event: event, value: value, e:event.target.dataset.optionIndex, val:sensorMultiplyTemplates[event.target.dataset.optionIndex].value})}\r\n                // onChange={(event, value) => setValues({ ...values, sensorMultiply: value })}\r\n                onInputChange={(event, value) => setValues({ ...values, sensorMultiply: sensorMultiplyTemplates[event.target.dataset.optionIndex].value })}\r\n                options={sensorMultiplyTemplates.map((option) => option.title)}\r\n                renderInput={(params) => (\r\n                    <TextField {...params} label=\"Mnożnik matrycy\"  variant=\"outlined\"  />\r\n                )}\r\n            />\r\n            <FormControl variant=\"outlined\" className={classes.input}>\r\n                <InputLabel id=\"camera-orientation-label\">Ustawienie aparatu</InputLabel>\r\n                <Select\r\n                    labelId=\"camera-orientation-label\"\r\n                    id=\"camera-orientation\"\r\n                    value={values.cameraOrientation}\r\n                    onChange={(event)=> setValues({ ...values, cameraOrientation: event.target.value })}\r\n                    label=\"Ustawienie aparatu\"\r\n                >\r\n                    <MenuItem value='portrait'>Pionowe </MenuItem>\r\n                    <MenuItem value='landscape'>Poziome  </MenuItem>\r\n                    {/*<CameraAltOutlinedIcon />*/}\r\n                </Select>\r\n            </FormControl>\r\n\r\n        </div>\r\n        <div>\r\n            <h1>focalLength: {values.focalLength}</h1>\r\n            <h1>sensorMultiply: {values.sensorMultiply}</h1>\r\n            <h1>cameraOrientation: {values.cameraOrientation}</h1>\r\n        </div>\r\n            <div>\r\n                {generateFrame()}\r\n            </div>\r\n            <div className={classes.sliderContainer}>\r\n                <IconButton onClick={()=>setRows(rows-1)} disabled={rows===1}  className={classes.iconButton}>\r\n                    <ExposureNeg1  />\r\n                </IconButton>\r\n                <TextField  label=\"Wiersze\" variant=\"outlined\" value={rows} onChange={e=>setRows(e.target.value)}/>\r\n                <IconButton onClick={()=>setRows(rows+1)}  className={classes.iconButton}>\r\n                    <PlusOne  />\r\n                </IconButton>\r\n            </div>\r\n            <div className={classes.sliderContainer}>\r\n                <IconButton onClick={()=>setColumns(columns-1)} disabled={columns===1}  className={classes.iconButton}>\r\n                    <ExposureNeg1  />\r\n                </IconButton>\r\n                <TextField  label=\"Kolumny\" variant=\"outlined\" value={columns} onChange={e=>setColumns(e.target.value)}/>\r\n                <IconButton onClick={()=>setColumns(columns+1)}  className={classes.iconButton}>\r\n                    <PlusOne  />\r\n                </IconButton>\r\n            </div>\r\n    </>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    input:{flexGrow:3, margin:10},\r\n    sliderContainer:{\r\n        display:'flex', alignItems:'center'\r\n    },\r\n    iconButton:{margin:'1%'}\r\n}));\r\n","D:\\Wiktor\\manager-spacery\\spacery-pro-manager\\src\\pages\\VirtualTours.jsx",[],"D:\\Wiktor\\manager-spacery\\spacery-pro-manager\\src\\pages\\PanoheadUsage.jsx",[],"D:\\Wiktor\\manager-spacery\\spacery-pro-manager\\src\\pages\\CameraInstallation.jsx",["56"],"import React, {useState} from 'react'\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport fujiXt20 from '../assets/img/fuji_xt20.png'; // Tell webpack this JS file uses this image\r\nimport nikonD5200 from '../assets/img/nikon_D5200.png';\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport StepContent from \"@material-ui/core/StepContent\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n\r\n\r\n\r\nfunction getSteps(camera) {\r\n    switch(camera){\r\n        case 'fuji_xt20':\r\n            return ['krok1' ,'krok2'];\r\n        case 'nikon_d5200':\r\n            return ['krok1' ,'krok2'];\r\n\r\n\r\n    }\r\n}\r\n\r\nfunction getStepContent(step) {\r\n    switch (step) {\r\n        case 0:\r\n            return `For each ad campaign that you create, you can control how much\r\n              you're willing to spend on clicks and conversions, which networks\r\n              and geographical locations you want your ads to show on, and more.`;\r\n        case 1:\r\n            return 'An ad group contains one or more ads which target a shared set of keywords.';\r\n\r\n        default:\r\n            return 'Unknown step';\r\n    }\r\n}\r\n\r\nexport const CameraInstallation=()=>{\r\n    const classes = useStyles();\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    const [activeCamera,setActiveCamera]=useState(null);\r\n\r\n    const steps = getSteps(activeCamera);\r\n\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n\r\n    const handleReset = () => {\r\n        setActiveStep(0);\r\n    };\r\n\r\n    const handleGoToStep = (number) => {\r\n        setActiveStep(number);\r\n    };\r\n\r\n    return (<>\r\n        <div className={classes.camerasWrapper}>\r\n            <Card className={[classes.cameraCard, activeCamera==='fuji_xt20'&&classes.active]} variant=\"outlined\" onClick={()=>setActiveCamera('fuji_xt20')}>\r\n                <CardContent>\r\n                    <img className={classes.img}  src={fujiXt20} alt='Fuji xt20' />\r\n\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Typography variant=\"h6\">Fuji xt20</Typography>\r\n                </CardActions>\r\n            </Card>\r\n            <Card className={[classes.cameraCard, activeCamera==='nikon_d5200'&&classes.active]} variant=\"outlined\" onClick={()=>setActiveCamera('nikon_d5200')}>\r\n                <CardContent>\r\n                    <img className={classes.img}  src={nikonD5200} alt='Fuji xt20' />\r\n\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Typography variant=\"h6\">Nikon D5200</Typography>\r\n                </CardActions>\r\n            </Card>\r\n        </div>\r\n            {activeCamera==='fuji_xt20'&&<div className={classes.contentCard}>\r\n                <Typography variant='h4' style={{textAlign:'center', marginTop:10}}>Fuji XT20</Typography>\r\n\r\n\r\n\r\n                <div className={classes.root}>\r\n                    <Stepper activeStep={activeStep} orientation=\"vertical\" style={{backgroundColor:'transparent'}}>\r\n                        {steps.map((label, index) => (\r\n                            <Step key={label}>\r\n                                <StepLabel className={classes.label} onClick={()=>handleGoToStep(index)}>{label}</StepLabel>\r\n                                <StepContent>\r\n                                    <Typography>{getStepContent(index)}</Typography>\r\n                                    <div className={classes.actionsContainer}>\r\n                                        <div>\r\n                                            <Button\r\n                                                disabled={activeStep === 0}\r\n                                                onClick={handleBack}\r\n                                                className={classes.button}\r\n                                            >\r\n                                                Wstecz\r\n                                            </Button>\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                onClick={handleNext}\r\n                                                className={classes.button}\r\n                                            >\r\n                                                {activeStep === steps.length - 1 ? 'Zakończ' : 'Dalej'}\r\n                                            </Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </StepContent>\r\n                            </Step>\r\n                        ))}\r\n                    </Stepper>\r\n                    {activeStep === steps.length && (\r\n                        <Paper square elevation={0} className={classes.resetContainer}>\r\n                            {/*<Typography>Wszystkie kroki zakończone sukcesem</Typography>*/}\r\n                            <Button onClick={handleReset} className={classes.button} variant=\"contained\" color=\"primary\">\r\n                                Zacznij od początku\r\n                            </Button>\r\n                        </Paper>\r\n                    )}\r\n                </div>\r\n\r\n\r\n\r\n            </div>}\r\n            {activeCamera==='nikon_d5200'&&<Card className={classes.contentCard}>\r\n                <CardContent>\r\n                    <Typography variant='h4' style={{textAlign:'center', marginTop:10}}>Nikon D5200</Typography>\r\n                </CardContent>\r\n            </Card>}\r\n        </>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    contentCard:{margin:'1%'},\r\n    cameraCard: {\r\n        width:'50%',\r\n        display:\"flex\",alignItems:'center',flexDirection:'column',margin:'1%', borderBottomWidth:5,\r\n        \"&:hover, &:focus\": {backgroundColor:'rgba(0, 74, 209, .1)'}\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },img:{width:'100%'},\r\n    camerasWrapper:{\r\n        display:'flex',\r\n    },active:{borderBottomColor:'#004AD1', borderBottomWidth:5},\r\n\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    button:{\r\n        marginTop:10,\r\n        marginRight:10\r\n    },\r\n    resetContainer:{\r\n        backgroundColor:'transparent',  justifyContent:'center', display:'flex'\r\n    },\r\n});\r\n// #2ecc71\r\n","D:\\Wiktor\\manager-spacery\\spacery-pro-manager\\src\\instructions\\panoheadHandling\\Step01.jsx",[],{"ruleId":"57","severity":1,"message":"58","line":18,"column":8,"nodeType":"59","messageId":"60","endLine":18,"endColumn":17},{"ruleId":"57","severity":1,"message":"61","line":19,"column":8,"nodeType":"59","messageId":"60","endLine":19,"endColumn":16},{"ruleId":"57","severity":1,"message":"62","line":21,"column":33,"nodeType":"59","messageId":"60","endLine":21,"endColumn":43},{"ruleId":"57","severity":1,"message":"63","line":22,"column":8,"nodeType":"59","messageId":"60","endLine":22,"endColumn":21},{"ruleId":"57","severity":1,"message":"64","line":24,"column":8,"nodeType":"59","messageId":"60","endLine":24,"endColumn":32},{"ruleId":"57","severity":1,"message":"65","line":29,"column":8,"nodeType":"59","messageId":"60","endLine":29,"endColumn":29},{"ruleId":"57","severity":1,"message":"66","line":30,"column":8,"nodeType":"59","messageId":"60","endLine":30,"endColumn":32},{"ruleId":"57","severity":1,"message":"67","line":31,"column":8,"nodeType":"59","messageId":"60","endLine":31,"endColumn":34},{"ruleId":"57","severity":1,"message":"68","line":32,"column":8,"nodeType":"59","messageId":"60","endLine":32,"endColumn":14},{"ruleId":"57","severity":1,"message":"69","line":36,"column":5,"nodeType":"59","messageId":"60","endLine":36,"endColumn":9},{"ruleId":"57","severity":1,"message":"70","line":130,"column":11,"nodeType":"59","messageId":"60","endLine":130,"endColumn":23},{"ruleId":"57","severity":1,"message":"71","line":3,"column":8,"nodeType":"59","messageId":"60","endLine":3,"endColumn":12},{"ruleId":"57","severity":1,"message":"72","line":13,"column":8,"nodeType":"59","messageId":"60","endLine":13,"endColumn":14},{"ruleId":"73","severity":1,"message":"74","line":39,"column":7,"nodeType":"75","endLine":39,"endColumn":15,"suggestions":"76"},{"ruleId":"77","severity":1,"message":"78","line":20,"column":5,"nodeType":"79","messageId":"80","endLine":27,"endColumn":6},"no-unused-vars","'InboxIcon' is defined but never used.","Identifier","unusedVar","'MailIcon' is defined but never used.","'StarBorder' is defined but never used.","'ListSubheader' is defined but never used.","'SettingsInputAntennaIcon' is defined but never used.","'FiberManualRecordIcon' is defined but never used.","'RadioButtonUncheckedIcon' is defined but never used.","'SubdirectoryArrowRightIcon' is defined but never used.","'Step01' is defined but never used.","'Link' is defined but never used.","'handleClick2' is assigned a value but never used.","'Grid' is defined but never used.","'Slider' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'calcAngleOfView'. Either include it or remove the dependency array.","ArrayExpression",["81"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase",{"desc":"82","fix":"83"},"Update the dependencies array to be: [calcAngleOfView, values]",{"range":"84","text":"85"},[1572,1580],"[calcAngleOfView, values]"]