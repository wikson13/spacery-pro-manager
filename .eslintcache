[{"/Users/wiktormonka/Documents/WebstormProjects/spacery-pro-manager/src/index.js":"1","/Users/wiktormonka/Documents/WebstormProjects/spacery-pro-manager/src/reportWebVitals.js":"2","/Users/wiktormonka/Documents/WebstormProjects/spacery-pro-manager/src/App.js":"3","/Users/wiktormonka/Documents/WebstormProjects/spacery-pro-manager/src/instructions/panoheadHandling/Step01.jsx":"4","/Users/wiktormonka/Documents/WebstormProjects/spacery-pro-manager/src/pages/Presets.jsx":"5","/Users/wiktormonka/Documents/WebstormProjects/spacery-pro-manager/src/pages/VirtualTours.jsx":"6","/Users/wiktormonka/Documents/WebstormProjects/spacery-pro-manager/src/pages/Valuation.jsx":"7","/Users/wiktormonka/Documents/WebstormProjects/spacery-pro-manager/src/pages/CameraInstallation.jsx":"8","/Users/wiktormonka/Documents/WebstormProjects/spacery-pro-manager/src/pages/PanoheadUsage.jsx":"9"},{"size":915,"mtime":1618046000090,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1617298289573,"results":"12","hashOfConfig":"11"},{"size":9924,"mtime":1618045408682,"results":"13","hashOfConfig":"11"},{"size":95,"mtime":1617298289573,"results":"14","hashOfConfig":"11"},{"size":6531,"mtime":1617480115682,"results":"15","hashOfConfig":"11"},{"size":97,"mtime":1617300173402,"results":"16","hashOfConfig":"11"},{"size":1500,"mtime":1617306831646,"results":"17","hashOfConfig":"11"},{"size":6718,"mtime":1618046615510,"results":"18","hashOfConfig":"11"},{"size":4499,"mtime":1618045721565,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"y0a6s3",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/wiktormonka/Documents/WebstormProjects/spacery-pro-manager/src/index.js",[],"/Users/wiktormonka/Documents/WebstormProjects/spacery-pro-manager/src/reportWebVitals.js",[],["42","43"],"/Users/wiktormonka/Documents/WebstormProjects/spacery-pro-manager/src/App.js",["44","45","46","47","48","49","50","51","52","53","54"],"import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport Collapse from \"@material-ui/core/Collapse\";\nimport {ExpandLess, ExpandMore, StarBorder} from \"@material-ui/icons\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\nimport SettingsInputAntennaIcon from '@material-ui/icons/SettingsInputAntenna';\nimport ThreeSixtyIcon from '@material-ui/icons/ThreeSixty';\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\nimport TapAndPlayIcon from '@material-ui/icons/TapAndPlay';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport SubdirectoryArrowRightIcon from '@material-ui/icons/SubdirectoryArrowRight';\nimport Step01 from \"./instructions/panoheadHandling/Step01\";\nimport {\n    Switch,\n    Route,\n    Link, NavLink\n} from \"react-router-dom\";\nimport {Presets} from \"./pages/Presets\";\nimport {VirtualTours} from \"./pages/VirtualTours\";\nimport {Valuation} from \"./pages/Valuation\";\nimport {CameraInstallation} from \"./pages/CameraInstallation\";\nimport {PanoheadUsage} from \"./pages/PanoheadUsage\";\nconst drawerWidth = 300;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n    nested: {\n        paddingLeft: theme.spacing(4),\n    },\n}));\n\nconst activeStyle={\n    color: 'black',\n    fontWeight:'bold'\n}\n\nconst  App=()=> {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false);\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    const [open1, setOpen1] = React.useState(false);\n    const [open2, setOpen2] = React.useState(false);\n\n    const handleClick = () => {\n        setOpen1(!open1);\n    };\n\n    const handleClick2 = () => {\n        setOpen2(!open2);\n    };\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, open && classes.hide)}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap>\n                        Spacery-wirtualne.pro\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={open}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <div className={classes.drawerHeader}>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                    </IconButton>\n                </div>\n                <Divider />\n                <List\n                    component=\"nav\"\n                >\n                    <NavLink\n                        to=\"/virtual-tours\"\n                        activeStyle={activeStyle}\n                    >\n                    <ListItem button >\n                        <ListItemIcon>\n                            <ThreeSixtyIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Spacery\" />\n                    </ListItem></NavLink>\n                    <NavLink\n                        to=\"/valuation\"\n                        activeStyle={activeStyle}\n                    >\n                    <ListItem button >\n                        <ListItemIcon>\n                            <AttachMoneyIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Wycena\" />\n                    </ListItem></NavLink>\n\n                    <ListItem button onClick={handleClick}>\n                        <ListItemIcon>\n                            <MenuBookIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Instrukcje\" />\n                        {open1 ? <ExpandLess /> : <ExpandMore />}\n                    </ListItem>\n                    <Collapse in={open1} timeout=\"auto\" unmountOnExit>\n                        <List component=\"div\" disablePadding>\n\n\n\n                            <NavLink\n                                to=\"/panohead-usage\"\n                                activeStyle={activeStyle}\n\n                            >\n                                <ListItem button className={classes.nested}>\n                                    <ListItemIcon>\n                                        <TapAndPlayIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary=\"Obsługa głowicy\" />\n                                </ListItem>\n                            </NavLink>\n\n\n                            <NavLink\n                                to=\"/camera-installation\"\n                                activeStyle={activeStyle}\n\n                            >\n                            <ListItem button className={classes.nested}>\n                                <ListItemIcon>\n                                    <CameraAltIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"Montaż aparatów\" />\n                            </ListItem>\n                            </NavLink>\n                        </List>\n                    </Collapse>\n                    <NavLink\n                    to=\"/presets\"\n                    activeStyle={activeStyle}\n\n                    >\n                    <ListItem button >\n                        <ListItemIcon>\n                            <AttachMoneyIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Generator prestów\" />\n                    </ListItem></NavLink>\n                </List>\n\n            </Drawer>\n            <main\n                className={clsx(classes.content, {\n                    [classes.contentShift]: open,\n                })}\n            >\n                <div className={classes.drawerHeader} />\n                <Switch>\n                    <Route path=\"/presets\">\n                        <Presets />\n                    </Route>\n                    <Route path=\"/virtual-tours\">\n                        <VirtualTours />\n                    </Route>\n                    <Route path=\"/valuation\">\n                        <Valuation />\n                    </Route>\n                    <Route path=\"/camera-installation\">\n                        <CameraInstallation />\n                    </Route>\n                    <Route path=\"/panohead-usage\">\n                        <PanoheadUsage />\n                    </Route>\n                    <Route path=\"/\">\n                        home\n                    </Route>\n                </Switch>\n            </main>\n        </div>\n    );\n}\nexport default App;\n","/Users/wiktormonka/Documents/WebstormProjects/spacery-pro-manager/src/instructions/panoheadHandling/Step01.jsx",[],"/Users/wiktormonka/Documents/WebstormProjects/spacery-pro-manager/src/pages/Presets.jsx",["55","56"],"import React, {useEffect} from 'react'\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport {makeStyles} from \"@material-ui/styles\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {ExposureNeg1, PlusOne} from \"@material-ui/icons\";\nimport Slider from \"@material-ui/core/Slider\";\n\nexport const Presets=()=>{\n    const classes = useStyles();\n    const [values, setValues] = React.useState({\n        focalLength: '',\n        sensorMultiply: '',\n        cameraOrientation:'portrait'\n    });\n\n    const [frameAngle, setFrameAngle] = React.useState({x:0,y:0});\n    const [rows, setRows] = React.useState(0);\n    const [columns, setColumns] = React.useState(0);\n    const sensorMultiplyTemplates = [\n        { title: 'FullFrame (x 1.00)', value: 1 },\n        { title: 'Nikon APS-C (x 1.53)', value: 1.53 },\n        { title: 'Canon APS-C (x 1.62)', value: 1.62 },\n        { title: 'Canon APS-H (x 1.29)', value: 1.29 },\n\n]\n    useEffect(()=>{\n        if(!!values.focalLength&&!!values.sensorMultiply){\n            console.log('changeVakues')\n            calcAngleOfView(values.focalLength,values.sensorMultiply)\n\n        }\n    },[values])\n\n    const calcAngleOfView=(_ogniskowa, _matryca)=> {\n        const ogniskowa=Number(_ogniskowa)\n        const matryca=Number(_matryca)\n        let pi = Math.PI;\n        let angleRadH = 2 * Math.atan((36 / matryca) / (2 * ogniskowa));\n        let angleDegH = (angleRadH * (180 / pi)).toFixed(2);\n\n        let angleRadV = 2 * Math.atan((24 / matryca) / (2 * ogniskowa));\n        let angleDegV = (angleRadV * (180 / pi)).toFixed(2);\n        setFrameAngle({x:angleDegH,y:angleDegV})\n        setColumns(calcMinNumbOfPhotos(360/(values.cameraOrientation!=='portrait'?angleDegH:angleDegV)))\n        setRows(calcMinNumbOfPhotos(180/(values.cameraOrientation==='portrait'?angleDegH:angleDegV)))\n    }\n\n    const handleChange = (prop) => (event) => {\n        setValues({ ...values, [prop]: event.target.value });\n    };\n\n    const generateFrame=()=>{\n        return <div style={{width: values.cameraOrientation==='portrait'?266:400, height: values.cameraOrientation==='portrait'?400:266, backgroundColor: 'red'}}>\n            <p>{frameAngle.x}°</p>\n            <p>{frameAngle.y}°</p>\n        </div>\n    }\n\n    const calcMinNumbOfPhotos=(value)=>{\n        console.log(value)\n        return Math.ceil(value)\n    }\n\n    return (<>\n        <div style={{display:'flex'}}>\n            <FormControl  className={classes.input} variant=\"outlined\">\n                <InputLabel htmlFor=\"outlined-adornment-amount\">Ogniskowa obiektywu</InputLabel>\n                <OutlinedInput\n                    id=\"outlined-adornment-amount\"\n                    value={values.amount}\n                    onChange={handleChange('focalLength')}\n                    endAdornment={<InputAdornment position=\"end\">mm</InputAdornment>}\n                    labelWidth={60}\n                />\n            </FormControl>\n            <Autocomplete\n                className={classes.input}\n                id=\"sensor-multiply\"\n                freeSolo\n                onChange={(event, value) => console.log({event: event, value: value, e:event.target.dataset.optionIndex, val:sensorMultiplyTemplates[event.target.dataset.optionIndex].value})}\n                // onChange={(event, value) => setValues({ ...values, sensorMultiply: value })}\n                onInputChange={(event, value) => setValues({ ...values, sensorMultiply: sensorMultiplyTemplates[event.target.dataset.optionIndex].value })}\n                options={sensorMultiplyTemplates.map((option) => option.title)}\n                renderInput={(params) => (\n                    <TextField {...params} label=\"Mnożnik matrycy\"  variant=\"outlined\"  />\n                )}\n            />\n            <FormControl variant=\"outlined\" className={classes.input}>\n                <InputLabel id=\"camera-orientation-label\">Ustawienie aparatu</InputLabel>\n                <Select\n                    labelId=\"camera-orientation-label\"\n                    id=\"camera-orientation\"\n                    value={values.cameraOrientation}\n                    onChange={(event)=> setValues({ ...values, cameraOrientation: event.target.value })}\n                    label=\"Ustawienie aparatu\"\n                >\n                    <MenuItem value='portrait'>Pionowe </MenuItem>\n                    <MenuItem value='landscape'>Poziome  </MenuItem>\n                    {/*<CameraAltOutlinedIcon />*/}\n                </Select>\n            </FormControl>\n\n        </div>\n        <div>\n            <h1>focalLength: {values.focalLength}</h1>\n            <h1>sensorMultiply: {values.sensorMultiply}</h1>\n            <h1>cameraOrientation: {values.cameraOrientation}</h1>\n        </div>\n            <div>\n                {generateFrame()}\n            </div>\n            <div className={classes.sliderContainer}>\n                <IconButton onClick={()=>setRows(rows-1)} disabled={rows===1}  className={classes.iconButton}>\n                    <ExposureNeg1  />\n                </IconButton>\n                <TextField  label=\"Wiersze\" variant=\"outlined\" value={rows} onChange={e=>setRows(e.target.value)}/>\n                <IconButton onClick={()=>setRows(rows+1)}  className={classes.iconButton}>\n                    <PlusOne  />\n                </IconButton>\n            </div>\n            <div className={classes.sliderContainer}>\n                <IconButton onClick={()=>setColumns(columns-1)} disabled={columns===1}  className={classes.iconButton}>\n                    <ExposureNeg1  />\n                </IconButton>\n                <TextField  label=\"Kolumny\" variant=\"outlined\" value={columns} onChange={e=>setColumns(e.target.value)}/>\n                <IconButton onClick={()=>setColumns(columns+1)}  className={classes.iconButton}>\n                    <PlusOne  />\n                </IconButton>\n            </div>\n    </>\n    )\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    input:{flexGrow:3, margin:10},\n    sliderContainer:{\n        display:'flex', alignItems:'center'\n    },\n    iconButton:{margin:'1%'}\n}));\n","/Users/wiktormonka/Documents/WebstormProjects/spacery-pro-manager/src/pages/VirtualTours.jsx",[],"/Users/wiktormonka/Documents/WebstormProjects/spacery-pro-manager/src/pages/Valuation.jsx",["57"],"import React from 'react'\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {PlusOne, ExposureNeg1} from \"@material-ui/icons\";\nimport Slider from \"@material-ui/core/Slider\";\nimport {makeStyles} from \"@material-ui/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\n\nexport const Valuation=()=>{\n    // eslint-disable-next-line no-undef\n    const classes = useStyles();\n    const [value, setValue] = React.useState(30);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (<div>\n\n        <Typography id=\"continuous-slider\" gutterBottom>\n            Liczba punktów 360°\n        </Typography>\n\n        <div className={classes.sliderContainer}>\n                <IconButton onClick={()=>setValue(value-1)} disabled={value===1}  className={classes.iconButton}>\n                    <ExposureNeg1  />\n                </IconButton>\n\n                <Slider value={value} onChange={handleChange} step={1}\n\n                        min={1}\n                        max={150}         defaultValue={20}        valueLabelDisplay=\"auto\"\n\n                />\n                <IconButton onClick={()=>setValue(value+1)} disabled={value===150} className={classes.iconButton}>\n                    <PlusOne  />\n                </IconButton>\n        </div>\n\n    </div>)\n}\n\nconst useStyles = makeStyles({\n    sliderContainer:{\n        display:'flex', alignItems:'center'\n    },\n    iconButton:{margin:'1%'}\n});\n","/Users/wiktormonka/Documents/WebstormProjects/spacery-pro-manager/src/pages/CameraInstallation.jsx",["58"],"/Users/wiktormonka/Documents/WebstormProjects/spacery-pro-manager/src/pages/PanoheadUsage.jsx",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":18,"column":8,"nodeType":"65","messageId":"66","endLine":18,"endColumn":17},{"ruleId":"63","severity":1,"message":"67","line":19,"column":8,"nodeType":"65","messageId":"66","endLine":19,"endColumn":16},{"ruleId":"63","severity":1,"message":"68","line":21,"column":33,"nodeType":"65","messageId":"66","endLine":21,"endColumn":43},{"ruleId":"63","severity":1,"message":"69","line":22,"column":8,"nodeType":"65","messageId":"66","endLine":22,"endColumn":21},{"ruleId":"63","severity":1,"message":"70","line":24,"column":8,"nodeType":"65","messageId":"66","endLine":24,"endColumn":32},{"ruleId":"63","severity":1,"message":"71","line":29,"column":8,"nodeType":"65","messageId":"66","endLine":29,"endColumn":29},{"ruleId":"63","severity":1,"message":"72","line":30,"column":8,"nodeType":"65","messageId":"66","endLine":30,"endColumn":32},{"ruleId":"63","severity":1,"message":"73","line":31,"column":8,"nodeType":"65","messageId":"66","endLine":31,"endColumn":34},{"ruleId":"63","severity":1,"message":"74","line":32,"column":8,"nodeType":"65","messageId":"66","endLine":32,"endColumn":14},{"ruleId":"63","severity":1,"message":"75","line":36,"column":5,"nodeType":"65","messageId":"66","endLine":36,"endColumn":9},{"ruleId":"63","severity":1,"message":"76","line":130,"column":11,"nodeType":"65","messageId":"66","endLine":130,"endColumn":23},{"ruleId":"63","severity":1,"message":"77","line":13,"column":8,"nodeType":"65","messageId":"66","endLine":13,"endColumn":14},{"ruleId":"78","severity":1,"message":"79","line":39,"column":7,"nodeType":"80","endLine":39,"endColumn":15,"suggestions":"81"},{"ruleId":"63","severity":1,"message":"82","line":3,"column":8,"nodeType":"65","messageId":"66","endLine":3,"endColumn":12},{"ruleId":"83","severity":1,"message":"84","line":20,"column":5,"nodeType":"85","messageId":"86","endLine":27,"endColumn":6},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'InboxIcon' is defined but never used.","Identifier","unusedVar","'MailIcon' is defined but never used.","'StarBorder' is defined but never used.","'ListSubheader' is defined but never used.","'SettingsInputAntennaIcon' is defined but never used.","'FiberManualRecordIcon' is defined but never used.","'RadioButtonUncheckedIcon' is defined but never used.","'SubdirectoryArrowRightIcon' is defined but never used.","'Step01' is defined but never used.","'Link' is defined but never used.","'handleClick2' is assigned a value but never used.","'Slider' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'calcAngleOfView'. Either include it or remove the dependency array.","ArrayExpression",["89"],"'Grid' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},"Update the dependencies array to be: [calcAngleOfView, values]",{"range":"92","text":"93"},[1534,1542],"[calcAngleOfView, values]"]